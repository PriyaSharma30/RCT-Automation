# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Downlink_Page2.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
#! /home/vvdn/Documents/Mavenir_8/Mavenir_8/bin/python

import configparser
from PyQt5 import QtCore, QtGui, QtWidgets
import shutil
import sys
from PyQt5.QtWidgets import QMainWindow,QApplication,QWidget,QPushButton,QHBoxLayout,QFileDialog
import os
directory_path = os.path.dirname(__file__)
# directory_path = os.path.dirname(directory_path)
print(directory_path)



class Ui_set_value__MainWindow(object):
    def setupUi(self, set_value__MainWindow):
        set_value__MainWindow.setObjectName("set_value__MainWindow")
        set_value__MainWindow.resize(1188, 600)
        font = QtGui.QFont()
        font.setPointSize(13)
        set_value__MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(set_value__MainWindow)
        self.centralwidget.setStyleSheet("#centralwidget{background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:1.00497, fx:0.5, fy:0.494318, stop:0 rgba(181, 189, 171, 255), stop:1 rgba(255, 255, 255, 255));}\n"
"")
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setStyleSheet("QFrame,#lineEdit{\n"
"border:none;\n"
"background:transparent;}\n"
"#CH_N_label,#Ex_label,#test_m_label,#freq_label,#ser_label {\n"
"min-width:180px;\n"
"max-width:200px;\n"
"border:none;\n"
"}\n"
"QCheckBox{\n"
"min-width:100px;}\n"
"#widget,#frame_2,QFrame{\n"
"border:1px solid;\n"
"}\n"
"#frame{\n"
"border:none;}\n"
"\n"
"")
        self.widget.setObjectName("widget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.frame_2 = QtWidgets.QFrame(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout_4.setContentsMargins(5, 5, 5, 5)
        self.verticalLayout_4.setSpacing(5)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.frame = QtWidgets.QFrame(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setSpacing(1)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.frame_3 = QtWidgets.QFrame(self.frame)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout_2.setContentsMargins(8, 9, -1, 4)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.pushButton = QtWidgets.QPushButton(self.frame_3,clicked= lambda: self.checked())
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("")
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_2.addWidget(self.pushButton)
        self.run_pushButton_2 = QtWidgets.QPushButton(self.frame_3,clicked= lambda: self.start_process())
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.run_pushButton_2.setFont(font)
        self.run_pushButton_2.setObjectName("run_pushButton_2")
        self.horizontalLayout_2.addWidget(self.run_pushButton_2)


        #####################################################################
        # Save PDF
        #####################################################################
        self.pdf_pushButton_2 = QtWidgets.QPushButton(self.frame_3)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.pdf_pushButton_2.setFont(font)
        self.pdf_pushButton_2.setObjectName("pdf_pushButton_2")
        self.horizontalLayout_2.addWidget(self.pdf_pushButton_2)
        self.pdf_pushButton_2.clicked.connect(self.openSaveDialog)
        self.gridLayout_3.addWidget(self.frame_3, 3, 0, 1, 3)
        self.frame_4 = QtWidgets.QFrame(self.frame)
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame_4)
        self.verticalLayout.setContentsMargins(-1, -1, 9, -1)
        self.verticalLayout.setSpacing(11)
        self.verticalLayout.setObjectName("verticalLayout")
        self.test_m_label = QtWidgets.QLabel(self.frame_4)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.test_m_label.setFont(font)
        self.test_m_label.setObjectName("test_m_label")
        self.verticalLayout.addWidget(self.test_m_label)
        self.CH_N_label = QtWidgets.QLabel(self.frame_4)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.CH_N_label.setFont(font)
        self.CH_N_label.setObjectName("CH_N_label")
        self.verticalLayout.addWidget(self.CH_N_label)
        self.freq_label = QtWidgets.QLabel(self.frame_4)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.freq_label.setFont(font)
        self.freq_label.setObjectName("freq_label")
        self.verticalLayout.addWidget(self.freq_label)
        self.Ex_label = QtWidgets.QLabel(self.frame_4)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.Ex_label.setFont(font)
        self.Ex_label.setObjectName("Ex_label")
        self.verticalLayout.addWidget(self.Ex_label)
        self.gridLayout_3.addWidget(self.frame_4, 1, 0, 1, 1, QtCore.Qt.AlignLeft)
        self.heading = QtWidgets.QLabel(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.heading.sizePolicy().hasHeightForWidth())
        self.heading.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.heading.setFont(font)
        self.heading.setStyleSheet("")
        self.heading.setAlignment(QtCore.Qt.AlignCenter)
        self.heading.setObjectName("heading")
        self.gridLayout_3.addWidget(self.heading, 0, 0, 1, 3)
        self.frame_5 = QtWidgets.QFrame(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_5.sizePolicy().hasHeightForWidth())
        self.frame_5.setSizePolicy(sizePolicy)
        self.frame_5.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.gridLayout = QtWidgets.QGridLayout(self.frame_5)
        self.gridLayout.setContentsMargins(-1, -1, 9, -1)
        self.gridLayout.setObjectName("gridLayout")
        self.p1_checkBox = QtWidgets.QCheckBox(self.frame_5)
        self.p1_checkBox.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.p1_checkBox.setFont(font)
        self.p1_checkBox.setObjectName("p1_checkBox")
        self.gridLayout.addWidget(self.p1_checkBox, 1, 0, 1, 1)
        self.p7_checkBox = QtWidgets.QCheckBox(self.frame_5)
        self.p7_checkBox.setObjectName("p7_checkBox")
        self.gridLayout.addWidget(self.p7_checkBox, 1, 6, 1, 1)
        self._1_a_checkBox = QtWidgets.QCheckBox(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(13)
        self._1_a_checkBox.setFont(font)
        self._1_a_checkBox.setObjectName("_1_a_checkBox")
        self.gridLayout.addWidget(self._1_a_checkBox, 0, 1, 1, 1)
        self._1_checkBox = QtWidgets.QCheckBox(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(13)
        self._1_checkBox.setFont(font)
        self._1_checkBox.setObjectName("_1_checkBox")
        self.gridLayout.addWidget(self._1_checkBox, 0, 0, 1, 1)
        self.f3_checkBox = QtWidgets.QCheckBox(self.frame_5)
        self.f3_checkBox.setObjectName("f3_checkBox")
        self.gridLayout.addWidget(self.f3_checkBox, 2, 2, 1, 1)
        self.p8_checkBox = QtWidgets.QCheckBox(self.frame_5)
        self.p8_checkBox.setObjectName("p8_checkBox_2")
        self.gridLayout.addWidget(self.p8_checkBox, 1, 7, 1, 1)
        self.p2_checkBox = QtWidgets.QCheckBox(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.p2_checkBox.setFont(font)
        self.p2_checkBox.setObjectName("p2_checkBox")
        self.gridLayout.addWidget(self.p2_checkBox, 1, 1, 1, 1)
        self.ex_lineEdit = QtWidgets.QLineEdit(self.frame_5)
        self.ex_lineEdit.setObjectName("ex_lineEdit")
        self.gridLayout.addWidget(self.ex_lineEdit, 3, 0, 1, 2)
        self.f_all_checkBox = QtWidgets.QCheckBox(self.frame_5)
        self.f_all_checkBox.setObjectName("f_all_checkBox")
        self.f_all_checkBox.stateChanged.connect(self.on_stateChange)
        self.gridLayout.addWidget(self.f_all_checkBox, 2, 3, 1, 1)
        self.p3_checkBox = QtWidgets.QCheckBox(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.p3_checkBox.setFont(font)
        self.p3_checkBox.setObjectName("p3_checkBox")
        self.gridLayout.addWidget(self.p3_checkBox, 1, 2, 1, 1)
        self.CH_all_checkBox = QtWidgets.QCheckBox(self.frame_5)
        self.CH_all_checkBox.setObjectName("CH_all_checkBox")
        self.CH_all_checkBox.stateChanged.connect(self.on_channelChange)
        self.gridLayout.addWidget(self.CH_all_checkBox, 1, 8, 1, 1)
        self.p4_checkBox = QtWidgets.QCheckBox(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.p4_checkBox.setFont(font)
        self.p4_checkBox.setObjectName("p4_checkBox")
        self.gridLayout.addWidget(self.p4_checkBox, 1, 3, 1, 1)
        self.f1_checkBox = QtWidgets.QCheckBox(self.frame_5)
        self.f1_checkBox.setObjectName("f1_checkBox")
        self.gridLayout.addWidget(self.f1_checkBox, 2, 0, 1, 1)
        self.p6_checkBox = QtWidgets.QCheckBox(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.p6_checkBox.setFont(font)
        self.p6_checkBox.setObjectName("p6_checkBox")
        self.gridLayout.addWidget(self.p6_checkBox, 1, 5, 1, 1)
        self.p5_checkBox = QtWidgets.QCheckBox(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.p5_checkBox.setFont(font)
        self.p5_checkBox.setObjectName("p5_checkBox")
        #####################################################################
        # Set all channel in list for selecting all channel
        #####################################################################
        self.ports = [self.p1_checkBox,self.p2_checkBox,self.p3_checkBox,self.p4_checkBox,self.p5_checkBox,
        self.p6_checkBox,self.p7_checkBox,self.p8_checkBox]
        self.gridLayout.addWidget(self.p5_checkBox, 1, 4, 1, 1)
        self.f2_checkBox = QtWidgets.QCheckBox(self.frame_5)
        self.f2_checkBox.setObjectName("f2_checkBox")
        #####################################################################
        # Set all frequency in list for selecting all frequency
        #####################################################################
        self.checkBoxs =[self.f1_checkBox,self.f2_checkBox,self.f3_checkBox]
        self.gridLayout.addWidget(self.f2_checkBox, 2, 1, 1, 1)
        self.gridLayout_3.addWidget(self.frame_5, 1, 1, 1, 2)
        self.verticalLayout_4.addWidget(self.frame)
        self.Output_label = QtWidgets.QLabel(self.frame_2)
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.Output_label.setFont(font)
        self.Output_label.setStyleSheet("margin-top:10px;")
        self.Output_label.setAlignment(QtCore.Qt.AlignCenter)
        self.Output_label.setObjectName("Output_label")
        self.verticalLayout_4.addWidget(self.Output_label, 0, QtCore.Qt.AlignTop)
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.frame_2)
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.verticalLayout_4.addWidget(self.plainTextEdit)
        self.verticalLayout_3.addWidget(self.frame_2)
        self.verticalLayout_5.addWidget(self.widget)
        set_value__MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(set_value__MainWindow)
        QtCore.QMetaObject.connectSlotsByName(set_value__MainWindow)

    def openSaveDialog(self):
        option=QFileDialog.Options()
        #####################################################################
        # Append PDF file path here
        #####################################################################
        file_path = r'{}\Downlink\pdf\Result123.pdf'.format(directory_path)
        option =QFileDialog.DontUseNativeDialog
        # l = 'hello world'
        file=QFileDialog.getSaveFileName(self.frame_3,"Save File Window Title","defualt.pdf","All Files (*)",options=option)
        print(file[0])
        shutil.copyfile(file_path, file[0])

    def retranslateUi(self, set_value__MainWindow):
        _translate = QtCore.QCoreApplication.translate
        set_value__MainWindow.setWindowTitle(_translate("set_value__MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("set_value__MainWindow", "SET VALUES"))
        self.run_pushButton_2.setText(_translate("set_value__MainWindow", "RUN"))
        self.pdf_pushButton_2.setText(_translate("set_value__MainWindow", "SAVE PDF"))
        self.test_m_label.setText(_translate("set_value__MainWindow", "Test Model"))
        self.CH_N_label.setText(_translate("set_value__MainWindow", "Channel Number"))
        self.freq_label.setText(_translate("set_value__MainWindow", "Frequency"))
        self.Ex_label.setText(_translate("set_value__MainWindow", "External Gain"))
        self.heading.setText(_translate("set_value__MainWindow", "Downlink"))
        self.p1_checkBox.setText(_translate("set_value__MainWindow", "1"))
        self.p7_checkBox.setText(_translate("set_value__MainWindow", "7"))
        self._1_a_checkBox.setText(_translate("set_value__MainWindow", "TM_3.1a"))
        self._1_checkBox.setText(_translate("set_value__MainWindow", " TM_3.1"))
        self.f3_checkBox.setText(_translate("set_value__MainWindow", "3.55"))
        self.p8_checkBox.setText(_translate("set_value__MainWindow", "8"))
        self.p2_checkBox.setText(_translate("set_value__MainWindow", "2"))
        self.f_all_checkBox.setText(_translate("set_value__MainWindow", "Select ALL"))
        self.p3_checkBox.setText(_translate("set_value__MainWindow", "3"))
        self.CH_all_checkBox.setText(_translate("set_value__MainWindow", "Select ALL"))
        self.p4_checkBox.setText(_translate("set_value__MainWindow", "4"))
        self.f1_checkBox.setText(_translate("set_value__MainWindow", "3.35"))
        self.p6_checkBox.setText(_translate("set_value__MainWindow", "6"))
        self.p5_checkBox.setText(_translate("set_value__MainWindow", "5"))
        self.f2_checkBox.setText(_translate("set_value__MainWindow", "3.45"))
        self.Output_label.setText(_translate("set_value__MainWindow", "OUTPUT"))

    def on_runcode(self,state):
        # print(self.checkBoxs)
        for code in self.checkBoxs:
            code.setCheckState(state)

    def message(self, s):
        self.plainTextEdit.appendPlainText(s)

    def start_process(self):
        self.p = None
        if self.p is None:  # No process running.
            self.plainTextEdit.clear()
            self.message("Executing process")
            self.p = QtCore.QProcess()  # Keep a reference to the QProcess (e.g. on self) while it's running.
            self.p.readyReadStandardOutput.connect(self.handle_stdout)
            self.p.readyReadStandardError.connect(self.handle_stderr)
            self.p.stateChanged.connect(self.handle_state)
            self.p.finished.connect(self.process_finished)  # Clean up once complete.
            # print(directory_path)
            self.plainTextEdit.appendPlainText('{}'.format('+'*100)) 
            self.p.start(r"C:\Users\Administrator\Documents\Latest_etw_8T8R\env\Scripts\python", [r'{}\Downlink\8t8r_dl.py'.format(directory_path)])
            # self.p.start("/home/vvdn/Documents/Mavenir_8/Mavenir_8/bin/python", ['/home/vvdn/Documents/Mavenir_8/Mavenir_8/lib/python3.8/site-packages/etw/hw_test/Mavu_ru/Downlink/8t8r_dl.py'])


    def handle_stderr(self):
        data = self.p.readAllStandardError()
        stderr = bytes(data).decode("utf8")
        self.message(stderr)

    def handle_stdout(self):
        data = self.p.readAllStandardOutput()
        stdout = bytes(data).decode("utf8")
        self.message(stdout)

    def handle_state(self, state):
        states = {
            QtCore.QProcess.NotRunning: 'Not running',
            QtCore.QProcess.Starting: 'Starting',
            QtCore.QProcess.Running: 'Running',
        }
        state_name = states[state]
        self.message(f"State changed: {state_name}")

    def process_finished(self):
        self.message("Process finished.")
        self.p = None
        

    def on_stateChange(self,state):
        for checkBox in self.checkBoxs:
            checkBox.setCheckState(state)
    
    def on_channelChange(self,state):
        for port in self.ports:
            port.setCheckState(state)

    def checked(self):
        self.plainTextEdit.clear()
        cfgfile = open(r"{}\sample.ini".format(directory_path),'w')
        select_port = ''
        flag = False
        flag_f = False
        freqs = ['3.35','3.45','3.55']
        try:
            f1_ = configparser.ConfigParser() 
            f1_.add_section("Section1")
            for freq in self.checkBoxs:
                if freq.isChecked() != True:
                    freqs[self.checkBoxs.index(freq)] = ''
                else:
                    flag_f =  True
            if self._1_checkBox.isChecked()==True:
                self.tm_3_1="TM_3.1"
            else:
                self.tm_3_1="TM_3.1a"
            for port in self.ports:
                if port.isChecked() == True:
                    select_port = '{} {}'.format(select_port,self.ports.index(port)+1).strip()
                    flag = True

            if flag == False:
                select_port = '1'
            if flag_f == False:
                freqs[2] = '3.55'
            print(select_port.strip())
            frequencies = '{} {} {}'.format(freqs[0],freqs[1],freqs[2]).strip()
            f1_.set("Section1","Channel",select_port)
            f1_.set("Section1","Frequency",frequencies)
            f1_.set("Section1","Model",self.tm_3_1)
            f1_.set("Section1","cable_loss",self.ex_lineEdit.text())
            f1_.write(cfgfile)
            cfgfile.close() 
            self.plainTextEdit.appendPlainText('Channel : {}'.format(select_port)) 
            self.plainTextEdit.appendPlainText('Frequency : {}'.format(frequencies))
            self.plainTextEdit.appendPlainText('Model : {}'.format(self.tm_3_1))
            self.plainTextEdit.appendPlainText('cable_loss : {}'.format(self.ex_lineEdit.text())) 
            self.plainTextEdit.appendPlainText('Data appended successfully...') 
        except Exception as e:
            print(e)
            pass








if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    set_value__MainWindow = QtWidgets.QMainWindow()
    ui = Ui_set_value__MainWindow()
    ui.setupUi(set_value__MainWindow)
    set_value__MainWindow.show()
    sys.exit(app.exec_())




